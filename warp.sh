#!/bin/bash
get_valid_port() {
    local prompt="$1"
    local default_value="$2"
    local port_var=""

    while true; do
        read -p "$(get_text "$prompt")$(get_text 'DEFAULT_PROMPT' | sed "s/XXX/$default_value/")" port_var
        port_var="${port_var:-$default_value}"

        if [[ "$port_var" =~ ^[0-9]+$ ]] && (( port_var >= 1 && port_var <= 65535 )); then
            echo "$port_var"
            break
        else
            echo "$(get_text INVALID_PORT)"
            sleep 2
        fi
    done
}
install_warp() {
    echo "================================================"
    echo "          üöÄ –£–°–¢–ê–ù–û–í–ö–ê WARP          "
    echo "================================================"
    sleep 2

    # –Ø—Ä–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ—Ä—Ç–∞
    echo -e "\n${CYAN}üåê –í–´–ë–û–† –ü–û–†–¢–ê –î–õ–Ø WARP PROXY${NC}"
    echo -e "${YELLOW}‚Üì –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è WARP –ø—Ä–æ–∫—Å–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 40000)${NC}"
    echo -e "${GREEN}‚û§ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—ã –æ—Ç 10000 –¥–æ 65535${NC}"
    
    local selected_port=$(get_valid_port "ENTER_WARP_PORT" "40000")
    echo -e "${GREEN}‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ—Ä—Ç: $selected_port${NC}"
    sleep 2

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞ root
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WARP${NC}"
        sleep 2
        return 1
    fi

    echo -e "\n${CYAN}üîç –ü–†–û–í–ï–†–ö–ê –û–ü–ï–†–ê–¶–ò–û–ù–ù–û–ô –°–ò–°–¢–ï–ú–´${NC}"
    sleep 2
    if [[ -f "/etc/os-release" ]]; then
        . /etc/os-release
        if [[ "$ID" != "ubuntu" && "$ID" != "debian" ]]; then
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Ubuntu –∏ Debian${NC}"
            sleep 2
            return 1
        fi
        echo -e "${GREEN}‚úÖ –û–°: $PRETTY_NAME${NC}"
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°${NC}"
        sleep 2
        return 1
    fi
    sleep 2

    echo -e "\n${CYAN}üì¶ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô${NC}"
    sleep 2
    sudo apt-get update -y
    sudo apt-get install -y curl gnupg2 apt-transport-https lsb-release ca-certificates
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    sleep 2

    echo -e "\n${CYAN}‚ûï –î–û–ë–ê–í–õ–ï–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø CLOUDFLARE${NC}"
    sleep 2
    if ! sudo curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor | sudo tee /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg >/dev/null; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å GPG –∫–ª—é—á${NC}"
        sleep 2
        return 1
    fi
    
    if ! echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list > /dev/null; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π${NC}"
        sleep 2
        return 1
    fi
    
    sudo apt-get update -y
    echo -e "${GREEN}‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Cloudflare –¥–æ–±–∞–≤–ª–µ–Ω${NC}"
    sleep 2

    echo -e "\n${CYAN}üì• –£–°–¢–ê–ù–û–í–ö–ê CLOUDFLARE WARP${NC}"
    sleep 2
    if ! sudo apt-get install -y cloudflare-warp; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WARP${NC}"
        sleep 2
        return 1
    fi
    echo -e "${GREEN}‚úÖ WARP —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    sleep 2

    echo -e "\n${CYAN}‚öôÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ê WARP${NC}"
    sleep 2
    
    echo -e "${YELLOW}üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ WARP...${NC}"
    if ! sudo warp-cli registration new; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è${NC}"
        sleep 2
        return 1
    fi
    echo -e "${GREEN}‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞${NC}"
    sleep 2
    
    echo -e "${YELLOW}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Ä—Ç–∞ $selected_port...${NC}"
    if ! sudo warp-cli proxy port "$selected_port"; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Ä—Ç${NC}"
        sleep 2
        return 1
    fi
    echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $selected_port —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    sleep 2

    echo -e "${YELLOW}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–∫—Å–∏...${NC}"
    if ! sudo warp-cli mode proxy; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏${NC}"
        sleep 2
        return 1
    fi
    echo -e "${GREEN}‚úÖ –†–µ–∂–∏–º –ø—Ä–æ–∫—Å–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
    sleep 2

    echo -e "\n${CYAN}üîó –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö WARP${NC}"
    sleep 2
    if ! sudo timeout 15 warp-cli connect; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è${NC}"
        sleep 2
        return 1
    fi
    echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ${NC}"
    sleep 3

    # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –∏ –≤—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    clear
    echo "================================================"
    echo "           üéâ WARP –£–°–¢–ê–ù–û–í–õ–ï–ù –ò –ù–ê–°–¢–†–û–ï–ù üéâ"
    echo "================================================"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ä—Ç–µ
    local actual_port=$(sudo warp-cli settings list 2>/dev/null | grep -i "proxy.port" | awk '{print $2}')
    actual_port=${actual_port:-$selected_port}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–æ–∫—Å–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    local warp_ip=$(curl --socks5 127.0.0.1:$actual_port -s -m 10 https://ifconfig.me)
    local country_info=$(curl --socks5 127.0.0.1:$actual_port -s -m 10 "https://ipapi.co/$warp_ip/country_name/")
    local city_info=$(curl --socks5 127.0.0.1:$actual_port -s -m 10 "https://ipapi.co/$warp_ip/city/")
    
    echo -e "\n${CYAN}üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–¢–ê–¢–£–°–ï${NC}"
    echo "------------------------------------------------"
    echo -e "${GREEN}‚Ä¢ –°—Ç–∞—Ç—É—Å: ${WHITE}–ü–æ–¥–∫–ª—é—á–µ–Ω–æ${NC}"
    echo -e "${GREEN}‚Ä¢ –ü–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏: ${WHITE}$actual_port${NC}"
    [[ -n "$warp_ip" ]] && echo -e "${GREEN}‚Ä¢ –í–Ω–µ—à–Ω–∏–π IP: ${WHITE}$warp_ip${NC}"
    if [[ -n "$country_info" && "$country_info" != "Undefined" ]]; then
        echo -e "${GREEN}‚Ä¢ –°—Ç—Ä–∞–Ω–∞: ${WHITE}$country_info${NC}"
        [[ -n "$city_info" ]] && echo -e "${GREEN}‚Ä¢ –ì–æ—Ä–æ–¥: ${WHITE}$city_info${NC}"
    else
        echo -e "${YELLOW}‚Ä¢ –õ–æ–∫–∞—Ü–∏—è: ${WHITE}Cloudflare Global Network${NC}"
    fi
    echo "------------------------------------------------"
    
    echo -e "\n${CYAN}üìã –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø:${NC}"
    echo "------------------------------------------------"
    echo -e "${GREEN}‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: ${WHITE}sudo warp-cli status${NC}"
    echo -e "${GREEN}‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç—å: ${WHITE}sudo warp-cli disconnect${NC}"
    echo -e "${GREEN}‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å: ${WHITE}sudo warp-cli connect${NC}"
    echo -e "${GREEN}‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${WHITE}sudo warp-cli settings list${NC}"
    echo -e "${GREEN}‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏: ${WHITE}export ALL_PROXY=socks5://127.0.0.1:$actual_port${NC}"
    echo "------------------------------------------------"
    sleep 2

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (30 —Å–µ–∫—É–Ω–¥)
    echo -e "\n${YELLOW}‚è≥ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...${NC}"
    for i in {30..1}; do
        echo -ne "${YELLOW}‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: ${i} —Å–µ–∫...\033[0K\r${NC}"
        sleep 1
    done
    echo -e "\n"

    return 0
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_warp_status() {
    while true; do
        clear
        echo "================================================"
        echo -e "         ${CYAN}$(get_text WARP_STATUS_HEADER)${NC}"
        echo "================================================"

        local status_output=$(sudo warp-cli status 2>/dev/null)
        
        if echo "$status_output" | grep -qE "Connected|–ü–æ–¥–∫–ª—é—á–µ–Ω–æ"; then
            echo -e "${GREEN}üéâ WARP –£–°–ü–ï–®–ù–û –ü–û–î–ö–õ–Æ–ß–ï–ù!${NC}"
            sleep 2
            
            local actual_port=$(sudo warp-cli settings list 2>/dev/null | grep "WarpProxy on port" | awk '{print $NF}')
            
            if [[ -z "$actual_port" ]]; then
                echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WARP.${NC}"
            else
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º ifconfig.me –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ IP
                local warp_ip=$(curl --socks5 127.0.0.1:$actual_port -s -m 10 https://ifconfig.me)
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º ip-api.com –ø–æ HTTP, —Ç–∞–∫ –∫–∞–∫ HTTPS —Ç—Ä–µ–±—É–µ—Ç –ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
                local geo_info=$(curl --socks5 127.0.0.1:$actual_port -s -m 10 http://ip-api.com/json/$warp_ip)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç
                if [[ -n "$geo_info" ]]; then
                    # –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é grep –∏ awk
                    local country_info=$(echo "$geo_info" | grep -o '"country":"[^"]*"' | awk -F'"' '{print $4}')
                    local city_info=$(echo "$geo_info" | grep -o '"city":"[^"]*"' | awk -F'"' '{print $4}')
                fi

                echo -e "\n${CYAN}üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–¢–ê–¢–£–°–ï${NC}"
                echo "------------------------------------------------"
                echo -e "${GREEN}‚Ä¢ –°—Ç–∞—Ç—É—Å: ${WHITE}–ü–æ–¥–∫–ª—é—á–µ–Ω–æ${NC}"
                echo -e "${GREEN}‚Ä¢ –ü–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏: ${WHITE}$actual_port${NC}"
                [[ -n "$warp_ip" ]] && echo -e "${GREEN}‚Ä¢ –í–Ω–µ—à–Ω–∏–π IP: ${WHITE}$warp_ip${NC}"
                
                if [[ -n "$country_info" && "$country_info" != "Undefined" ]]; then
                    echo -e "${GREEN}‚Ä¢ –°—Ç—Ä–∞–Ω–∞: ${WHITE}$country_info${NC}"
                    [[ -n "$city_info" ]] && echo -e "${GREEN}‚Ä¢ –ì–æ—Ä–æ–¥: ${WHITE}$city_info${NC}"
                else
                    echo -e "${YELLOW}‚Ä¢ –õ–æ–∫–∞—Ü–∏—è: ${WHITE}Cloudflare Global Network${NC}"
                fi
                echo "------------------------------------------------"
            fi
        else
            echo -e "${RED}‚ùå WARP –ù–ï –ü–û–î–ö–õ–Æ–ß–ï–ù${NC}"
            echo -e "${YELLOW}–í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞:${NC}"
            echo "$status_output"
        fi
        
        echo -e "${YELLOW}–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞, –≤–≤–µ–¥–∏—Ç–µ 'exit'${NC}"
        echo -ne "${CYAN}‚û§ –í–≤–µ–¥–∏—Ç–µ 'exit' –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${NC}"
        read choice
        if [[ "$choice" == "exit" ]]; then
            break
        fi
    done
}
uninstall_warp() {
    echo "$(get_text WARP_PROXY_UNINSTALL_START)"
    sleep 2
    
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ WARP
    if sudo warp-cli status | grep -q "Connected"; then
        echo -e "${ORANGE}$(get_text WARP_PROXY_STOPPING)${NC}"
        sleep 2
        sudo warp-cli disconnect &>/dev/null || true
    fi

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ Cloudflare WARP –∏ WireGuard
    echo -e "${ORANGE}$(get_text WARP_PROXY_REMOVING_PACKAGES)${NC}"
    sleep 2
    sudo apt-get purge -y cloudflare-warp &>/dev/null || true
    sudo apt-get purge -y wireguard &>/dev/null || true
    sudo apt-get autoremove -y &>/dev/null || true
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –∫–ª—é—á–∞
    sudo rm -rf /etc/apt/sources.list.d/cloudflare-client.list &>/dev/null || true
    sudo rm -f /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg &>/dev/null || true

    echo -e "${GREEN}$(get_text WARP_PROXY_UNINSTALL_COMPLETE)${NC}"
    sleep 3
}